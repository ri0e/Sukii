import { createSudokuInstance } from "./sudoku";
import { isUniqueSolution } from "./sudoku-solver";
export function analyze(Board) {
    const { analyzeBoard } = createSudokuInstance({
        initBoard: Board.slice(),
    });
    return Object.assign(Object.assign({}, analyzeBoard()), { hasUniqueSolution: isUniqueSolution(Board) });
}
export function generate(difficulty) {
    const { getBoard } = createSudokuInstance({ difficulty });
    if (!analyze(getBoard()).hasUniqueSolution) {
        return generate(difficulty);
    }
    return getBoard();
}
export function solve(Board) {
    const solvingSteps = [];
    const { solveAll } = createSudokuInstance({
        initBoard: Board.slice(),
        onUpdate: (solvingStep) => solvingSteps.push(solvingStep),
    });
    const analysis = analyze(Board);
    if (!analysis.hasSolution) {
        return { solved: false, error: "No solution for provided board!" };
    }
    const board = solveAll();
    if (!analysis.hasUniqueSolution) {
        return {
            solved: true,
            board,
            steps: solvingSteps,
            analysis,
            error: "No unique solution for provided board!",
        };
    }
    return { solved: true, board, steps: solvingSteps, analysis };
}
export function hint(Board) {
    const solvingSteps = [];
    const { solveStep } = createSudokuInstance({
        initBoard: Board.slice(),
        onUpdate: (solvingStep) => solvingSteps.push(solvingStep),
    });
    const analysis = analyze(Board);
    if (!analysis.hasSolution) {
        return { solved: false, error: "No solution for provided board!" };
    }
    const board = solveStep();
    if (!board) {
        return { solved: false, error: "No solution for provided board!" };
    }
    if (!analysis.hasUniqueSolution) {
        return {
            solved: true,
            board,
            steps: solvingSteps,
            analysis,
            error: "No unique solution for provided board!",
        };
    }
    return { solved: true, board, steps: solvingSteps, analysis };
}
