import { CellValue, Difficulty, Houses, InternalBoard, Strategy } from "./types";
export declare const contains: (array: Array<unknown>, object: unknown) => boolean;
export declare const uniqueArray: (array: Array<number>) => Array<number>;
export declare const generateHouseIndexList: (boardSize: number) => Houses[];
export declare const isBoardFinished: (board: InternalBoard) => boolean;
export declare const isEasyEnough: (difficulty: Difficulty, currentDifficulty: Difficulty) => boolean;
export declare const isHardEnough: (difficulty: Difficulty, currentDifficulty: Difficulty) => boolean;
export declare const getRemovalCountBasedOnDifficulty: (difficulty: Difficulty) => number;
export declare const addValueToCellIndex: (board: InternalBoard, cellIndex: number, value: CellValue) => void;
export declare const getRandomCandidateOfCell: (candidates: Array<CellValue>) => CellValue;
export declare const calculateBoardDifficulty: (usedStrategies: Array<number>, strategies: Array<Strategy>) => {
    difficulty: Difficulty;
    score: number;
};
